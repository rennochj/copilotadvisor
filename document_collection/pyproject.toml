[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "document-collection"
version = "0.1.0"
description = "Document collection and conversion tool for architectural reviews"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Architecture Advisor"},
]
keywords = ["document", "collection", "conversion", "markdown", "architecture", "mcp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "pypdf>=4.0.0",
    "python-docx>=1.1.0",
    "python-pptx>=0.6.23",
    "openpyxl>=3.1.0",
    # MCP will be added when available
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.5.0",
    "ruff>=0.0.287",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/copilotadvisor/document-collection"
Repository = "https://github.com/copilotadvisor/document-collection.git"
Documentation = "https://github.com/copilotadvisor/document-collection#readme"

[project.scripts]
collect-doc = "document_collection.cli.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/document_collection"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=document_collection",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250516",
]
